#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

function help_msg {
  echo "Usage: $(basename $0) [-d]"
  echo "  -d : Delete SysFlow operator from a OpenShift cluster"
  echo -e "\nIf -d is not presented, deploy operator with these REQUIRED enviornment variables:"
  echo "  S3_ACCESS_KEY_ID     : S3 access key ID"
  echo "  S3_SECRET_ACCESS_KEY : S3 secret access key"
  echo "  S3_HOSTNAME          : S3 object store address"
  echo "  S3_SYSFLOW_BUCKET    : S3 bucket to export data"

  exit 1
}

DOWN='false'
while getopts 'd' flag; do
  case "${flag}" in
    d) DOWN='true' ;;
    *) help_msg ;;
  esac
done
readonly DOWN

# Delete OpenShift operatoer
if [[ ${DOWN} == 'true' ]]; then
  oc delete -f deploy/crds/charts.helm.k8s.io_v1alpha1_sfexporterchart_cr.yaml
  oc delete -f deploy/operator.yaml
  oc delete -f deploy/role_binding.yaml

  # kubectl delete -f deploy/role.yaml
  oc delete -f deploy/service_account.yaml

  # kubectl delete -f deploy/service_account_app.yaml
  oc delete -f deploy/sysflow_scc.yaml

  # kubectl delete -f deploy/crds/charts.helm.k8s.io_sfexportercharts_crd.yaml 
  oc delete -f deploy/crds/charts.helm.k8s.io_sfexportercharts_crd.yaml

  exit 0
fi 

# Validate arguments before deploying
if [[ -z "${S3_HOSTNAME}" || -z "${S3_SYSFLOW_BUCKET}" || \
      -z "${S3_ACCESS_KEY_ID}" || -z "${S3_SECRET_ACCESS_KEY}" ]]; then
  echo "Required S3 environment variables are missing" >&2
  help_msg
fi

# Deploy OpenShift operator
oc delete secret sfexporterchart-secrets --ignore-not-found=true
oc create secret generic sfexporterchart-secrets \
    --from-literal=s3_access_key=${S3_ACCESS_KEY_ID} \
    --from-literal=s3_secret_key=${S3_SECRET_ACCESS_KEY}
oc label secret sfexporterchart-secrets app=sfexporterchart-secrets

oc apply -f deploy/crds/charts.helm.k8s.io_sfexportercharts_crd.yaml

# kubectl create -f deploy/service_account_app.yaml
oc apply -f deploy/sysflow_scc.yaml
oc apply -f deploy/service_account.yaml

# kubectl create -f deploy/role.yaml
oc apply -f deploy/role_binding.yaml
oc apply -f deploy/operator.yaml
oc adm policy add-scc-to-user sysflow-scc -z sysflow-serviceaccount

oc apply -f - << CRD
apiVersion: charts.helm.k8s.io/v1alpha1
kind: SfExporterChart
metadata:
  name: sfexporterchart
spec:
  fullnameOverride: ""
  nameOverride: sfexporter
  registry:
    secretName: ""
  resources: {}
  sfcollector:
    filter: "container.type!=host and container.type=cri-o and container.name!=sfexporter
      and container.name!=sfcollector"
    interval: 300
    outDir: /mnt/data/
    repository: sysflowtelemetry/sf-collector
    tag: edge
    imagePullPolicy: Always
  sfexporter:
    interval: 30
    outDir: /mnt/data/
    repository: sysflowtelemetry/sf-exporter
    s3Bucket: ${S3_SYSFLOW_BUCKET}
    s3Endpoint: ${S3_HOSTNAME}
    s3Location: us-south
    s3Port: 443
    s3Secure: "true"
    tag: edge
    imagePullPolicy: Always
  tmpfsSize: 500Mi
CRD
